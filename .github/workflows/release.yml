name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup NPM auth
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          version: pnpm changeset version
          commit: 'chore: version packages'
          title: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const releases = JSON.parse('${{ steps.changesets.outputs.publishedPackages }}');

            for (const release of releases) {
              const tagName = `${release.name}@${release.version}`;
              
              try {
                await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tagName,
                  name: `${release.name} v${release.version}`,
                  body: `ðŸŽ‰ **${release.name}** has been released!\n\n**Version:** ${release.version}\n\n[View on npm](https://www.npmjs.com/package/${release.name}/v/${release.version})`,
                  draft: false,
                  prerelease: false
                });
                
                console.log(`Created release for ${tagName}`);
              } catch (error) {
                console.error(`Failed to create release for ${tagName}:`, error);
              }
            }

      - name: Send Slack notification
        if: steps.changesets.outputs.published == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                title: 'ðŸŽ‰ New packages published!',
                text: `The following packages have been published to npm:\n${JSON.parse('${{ steps.changesets.outputs.publishedPackages }}').map(pkg => `â€¢ ${pkg.name}@${pkg.version}`).join('\n')}`,
                footer: 'Hatago Release',
                ts: ${{ github.event.head_commit.timestamp }}
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Optional: add if you want Slack notifications
