name: CLI Test Suite

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/hatago-cli/**'
      - 'packages/hatago-config/**'
      - 'templates/**'
      - '.github/workflows/cli-test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/hatago-cli/**'
      - 'packages/hatago-config/**'
      - 'templates/**'
      - '.github/workflows/cli-test.yml'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check hatago-config
        run: pnpm -F @hatago/config typecheck

      - name: Type check hatago-cli
        run: pnpm -F hatago-cli typecheck

      - name: Lint hatago-config
        run: pnpm -F @hatago/config lint || echo "Lint not configured"

      - name: Lint hatago-cli
        run: pnpm -F hatago-cli lint || echo "Lint not configured"

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Test hatago-config
        run: pnpm -F @hatago/config test --run --coverage

      - name: Test hatago-cli
        run: pnpm -F hatago-cli test --run --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: |
            packages/hatago-config/coverage/coverage-final.json
            apps/hatago-cli/coverage/coverage-final.json
          flags: unittests
          name: unit-test-coverage

  integration-tests:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18', '20', '21']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Test CLI commands
        run: |
          # Test basic CLI functionality
          node apps/hatago-cli/dist/index.js --help
          node apps/hatago-cli/dist/index.js config --help
          node apps/hatago-cli/dist/index.js scaffold --list

      - name: Test project creation
        run: |
          # Create test project
          mkdir test-workspace
          cd test-workspace
          node ../apps/hatago-cli/dist/index.js init test-project --skip-install

          # Verify project structure
          test -f test-project/package.json
          test -f test-project/src/index.ts
          test -f test-project/hatago.config.jsonc

          # Test configuration commands
          cd test-project
          node ../../apps/hatago-cli/dist/index.js config validate

      - name: Test plugin creation
        run: |
          cd test-workspace/test-project
          node ../../apps/hatago-cli/dist/index.js create-plugin test-tool --dry
          node ../../apps/hatago-cli/dist/index.js scaffold basic weather-api --dry

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Run E2E tests
        run: pnpm test:e2e --run
        env:
          CI: true

  template-validation:
    name: Template Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Validate templates
        run: |
          # Test each template
          for template in templates/plugins/*; do
            if [ -d "$template" ]; then
              template_name=$(basename "$template")
              echo "Validating template: $template_name"
              node apps/hatago-cli/dist/index.js scaffold --info "$template_name"
              
              # Test template generation
              mkdir -p test-output
              node apps/hatago-cli/dist/index.js scaffold "$template_name" "test-$template_name" --output test-output --dry
            fi
          done

      - name: Test template generation with different contexts
        run: |
          # Test with various naming patterns
          test_names=("simple-name" "CamelCase" "kebab-case" "snake_case" "PascalCase")

          for name in "${test_names[@]}"; do
            echo "Testing template with name: $name"
            node apps/hatago-cli/dist/index.js scaffold basic "$name" --dry
          done

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          # Check CLI dependencies
          pnpm -F hatago-cli audit --audit-level high
          pnpm -F @hatago/config audit --audit-level high

  build-and-package:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, integration-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Package CLI
        run: |
          cd apps/hatago-cli
          pnpm pack

      - name: Test packaged CLI
        run: |
          # Install from package
          npm install -g apps/hatago-cli/hatago-cli-*.tgz

          # Test global installation
          hatago --version
          hatago --help

          # Cleanup
          npm uninstall -g hatago-cli

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hatago-cli-package
          path: apps/hatago-cli/hatago-cli-*.tgz
          retention-days: 30

  # This job will only run on main branch pushes
  publish-preview:
    name: Publish Preview
    runs-on: ubuntu-latest
    needs: [build-and-package]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -F @hatago/config build
          pnpm -F hatago-cli build

      - name: Publish to npm (preview)
        run: |
          # Update version with preview tag
          cd apps/hatago-cli
          npm version prerelease --preid=preview --no-git-tag-version

          # Publish with preview tag
          npm publish --tag preview --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true
